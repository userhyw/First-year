#include <iostream>

using namespace std;
//封装，继承，多态。

//私有的数据外部无法访问
//通过内部的公共函数进行访问

struct IOU
{
private:
	int m_love;

};
//构造函数和析构函数！！！
//构造函数-》赋初值！！！
//析构函数-》做清理！！！

//构造函数没有返回值，也不写void，函数名和类名一样。可以有参数发生重载。无需自动调用。
//析构函数~多了一个~其他都差不多，但是析构函数不能有参数，不能发生重载。


//对象初始化和清理
//构造函数初始化

//构造・和析构都是必须有的，如果我们不写，编译器会给直接写，只是空实现;
class Person
{
public:
	//构造函数
	//创建对象的时候自动调用且只一次
	Person() { cout << "构造函数调用1" << endl; }

	//析构函数
	//对象在销毁前会自动调用析构函数!!!
	~Person() { cout << "析构函数调用" << endl; }

};

int main(void)
{
	Person p;//栈上的数据




	system("pause");
	return 0;
}